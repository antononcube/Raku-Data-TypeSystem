use lib './lib';
use lib '.';

use Data::TypeSystem;
use Data::TypeSystem::Predicates;

use Test;

my @dsRandNum =
        [{ :A(5.295105534105463e0), :B(2.4765132431861057e0) },
         { :A(5.504432770843629e0), :B(8.252672576017405e0) },
         { :A(0.47585824504772667e0), :B(4.6263512559214215e0) },
         { :A(3.5677811370087187e0), :B(6.861688593804621e0) },
         { :A(8.069906679462077e0), :B(5.504368820762937e0) },
         { :A(2.7870773247470213e0), :B(3.081614241542895e0) },
         { :A(4.688921458531033e0), :B(8.881239727023592e0) }];

plan *;

## 1
my @arr1 = @dsRandNum.map(*<A B>)>>.Array.Array;
is is-matrix(@arr1, Numeric:D), True;

## 2
is is-matrix(@arr1, Str:D), False;

## 3
my @arr3 = @arr1; @arr3[3] = [@arr3[3].head,];
is is-matrix(@arr3), False;

## 4
my @arr4[7;2] = @arr1;
is is-matrix(@arr4), True;

done-testing;
